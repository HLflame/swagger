/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.aaxiscommerce.telco.api;

import com.aaxiscommerce.telco.model.BillingAccount;
import com.aaxiscommerce.telco.model.CustomerAccount;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;

@Api(value = "customerAccounts", description = "the customerAccounts API")
public interface CustomerAccountsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "", nickname = "customerAccountsIdBillingAccountBillingidGet", notes = "Get Billing Account", response = BillingAccount.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The Account", response = BillingAccount.class),
        @ApiResponse(code = 404, message = "NotFound") })
    @RequestMapping(value = "/customerAccounts/{id}/billingAccount/{billingid}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<BillingAccount> customerAccountsIdBillingAccountBillingidGet(@ApiParam(value = "",required=true) @PathVariable("id") String id,@ApiParam(value = "",required=true) @PathVariable("billingid") String billingid) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"serviceAccountId\" : \"89819065\",  \"customerAccountId\" : \"0014191368-9\",  \"invoices\" : [ {    \"invoiceNumber\" : \"invoiceNumber\",    \"invoiceTotal\" : {      \"amount\" : 0,      \"currencyCode\" : \"CL\"    }  }, {    \"invoiceNumber\" : \"invoiceNumber\",    \"invoiceTotal\" : {      \"amount\" : 0,      \"currencyCode\" : \"CL\"    }  } ],  \"extraData\" : \"{\\\"cliente\\\":{\\\"deudaCliente\\\":{\\\"NombreCliente\\\":\\\"OLIVARES RUBILAR, RICARDO\\\",\\\"RutCliente\\\":\\\"14191368-9\\\",\\\"SaldoTotal\\\":29763,\\\"detalleCuentas\\\":[{\\\"NumeroCuenta\\\":\\\"89819065\\\",\\\"SaldoCuenta\\\":29763,\\\"FechaVencimiento\\\":\\\"2018-05-16T23:00:00.000-0400\\\"}],\\\"detalleDocumentos\\\":[{\\\"NumeroCuenta\\\":\\\"89819065\\\",\\\"NumeroDocumento\\\":\\\"131937252\\\",\\\"SaldoDocumento\\\":29763,\\\"FechaVencimientoDcto\\\":\\\"2018-05-16T23:00:00.000-0400\\\",\\\"FechaEmisionDcto\\\":\\\"2018-04-23T00:00:00.000-0300\\\",\\\"DireccionCobranza\\\":\\\"PJE MATICO 2931\\\",\\\"TipoCorrelativo\\\":\\\"Boleta\\\",\\\"CodTipoDocumento\\\":\\\"BO\\\"}]},\\\"deuda\\\":true}}\",  \"payments\" : [ null, null ],  \"id\" : \"89819065\",  \"accountBalance\" : {    \"amount\" : 0,    \"currencyCode\" : \"CL\"  }}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "", nickname = "customerAccountsIdGet", notes = "Get Customer Account", response = CustomerAccount.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The Account", response = CustomerAccount.class),
        @ApiResponse(code = 404, message = "NotFound") })
    @RequestMapping(value = "/customerAccounts/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<CustomerAccount> customerAccountsIdGet(@ApiParam(value = "",required=true) @PathVariable("id") String id) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"billingAccountIds\" : [ \"billingAccountIds\", \"billingAccountIds\" ],  \"extraData\" : \"{\\\"cliente\\\":{\\\"apellidoMaterno\\\":\\\"RUBILAR\\\",\\\"apellidoPaterno\\\":\\\"OLIVARES\\\",\\\"celularDeContacto\\\":\\\"+56963403629\\\",\\\"checkAceptacionCondicionesDeUso\\\":\\\"TRUE\\\",\\\"checkEnvioInformacionVTR\\\":\\\"FALSE\\\",\\\"emailDeContacto\\\":\\\"ricardo.aor@gmail.com\\\",\\\"estadoCivil\\\":\\\"1\\\",\\\"fechaAniversarioMatrimonio\\\":null,\\\"fechaCreacionComoCliente\\\":1404975630000,\\\"fechaDeNacimiento\\\":342932400000,\\\"fechaUltimaModificacionDePerfil\\\":1525987838000,\\\"fijoDeContacto\\\":\\\"+562\\\",\\\"flagTipoPersona\\\":\\\"N\\\",\\\"genero\\\":\\\"M\\\",\\\"nombres\\\":\\\"RICARDO\\\",\\\"rut\\\":\\\"0014191368-9\\\",\\\"usuario\\\":\\\"ricardo.aor@gmail.com\\\",\\\"existe\\\":true}}\",  \"serviceAccountIds\" : [ \"serviceAccountIds\", \"serviceAccountIds\" ],  \"id\" : \"90128444\",  \"accountOwner\" : {    \"emailAddress\" : \"ricardo.aor@gmail.com\",    \"phoneNumber\" : \"+56963403629\",    \"address\" : {      \"country\" : \"CL\",      \"city\" : \"San Bernardo\",      \"address1\" : \"PJE MATICO 2931\"    },    \"documentType\" : \"rut\",    \"entityType\" : \"null\",    \"name\" : \"RICARDO\",    \"documentID\" : \"14191368-9\",    \"taxStatus\" : \"null\"  },  \"accountNumber\" : \"14191368-9\"}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "", nickname = "customerAccountsPost", notes = "Create or Update Customer Account", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Ok"),
        @ApiResponse(code = 400, message = "InvalidRequest") })
    @RequestMapping(value = "/customerAccounts",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Void> customerAccountsPost(@ApiParam(value = "description"  )  @Valid @RequestBody CustomerAccount customerAccount) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
